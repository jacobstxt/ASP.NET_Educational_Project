@model UserEditViewModel


<div class="container">
    <form asp-action="Edit" enctype="multipart/form-data" class="p-4 shadow rounded bg-white" style="max-width: 950px;margin:auto">
        <h4 class="mb-4 text-center">Редагування користувача</h4>

        <div class="row mb-3">
            <div class="col-md-4">
                <img src="@(Model?.ViewImage ?? "/Picture/default.png")" class="img-fluid rounded shadow-sm" id="avatarPreview" />
            </div>
            <div class="col-md-8">
                <label asp-for="Image" class="form-label fw-semibold text-dark">Зображення</label>
                <input asp-for="Image" type="file" class="form-control" accept="image/*">
            </div>
        </div>



        <div class="row">
       
        <div class="col mb-3">
            <label asp-for="FirstName" class="form-label fw-semibold text-dark">Ім'я'</label>
            <input asp-for="FirstName" type="text" class="form-control">
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>


        <div class="col mb-3">
            <label asp-for="LastName" class="form-label fw-semibold text-dark">Прізвище</label>
            <input asp-for="LastName" type="text" class="form-control">
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>

        </div>

        <div class="mb-3">
            <label asp-for="Email" class="form-label fw-semibold text-dark">Email</label>
            <input asp-for="Email" type="text" class="form-control">
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>


        <div class="row">


            <div class="col mb-3">
                <label asp-for="Password" class="form-label fw-semibold text-dark">Пароль</label>
                <input asp-for="Password" type="text" class="form-control">
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>


            <div class="col mb-3">
                <label asp-for="ConfirmPassword" class="form-label fw-semibold text-dark">Підтвердження паролю</label>
                <input asp-for="ConfirmPassword" type="text" class="form-control">
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

        </div>


        <button type="submit" class="btn btn-primary">Редагувати користувача</button>
        <a asp-action="Index" class="btn btn-danger">Скасувати</a> 
      
    </form>


    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Ваше фото</h1>
                </div>
                <div class="modal-body text-center">
                    <div style="max-height: 400px; overflow: hidden;">
                        <img id="previewImage" src="#" alt="Preview" style="max-width: 100%;" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="cancelChangesBtn">Close</button>
                    <button type="button" class="btn btn-primary" id="saveChangesBtn">Save changes</button>
                </div>
            </div>
        </div>
    </div>


</div>

@section PageScripts {

    <script src="/js/cropper.min.js"></script>

    <script>

        const avatarInput = document.getElementById("Image");
        const modalElement = document.getElementById("exampleModal");
        const viewAvatar = document.getElementById("avatarPreview");
        const saveChangesBtn = document.getElementById("saveChangesBtn");
        const modal = new bootstrap.Modal(document.getElementById('exampleModal'));
        const cancelChangesBtn = document.getElementById("cancelChangesBtn");
        let cropper;


        avatarInput.addEventListener("change", (e)=> {
            const file = e.target.files[0];
            if(file){
                const reader = new FileReader();
                reader.onload = function(event){
                    const image = document.getElementById("previewImage");
                    image.src = event.target.result;
                    modal.show();

                      modalElement.addEventListener("shown.bs.modal", () => {
                        cropper = new Cropper(image, {
                            aspectRatio: 1,
                            viewMode: 1,
                            autoCropArea: 1,
                            responsive: true
                      });
                      }, { once: true });

                };
                reader.readAsDataURL(file);
            }
        });

           saveChangesBtn.addEventListener("click", ()=>{
               const canvas = cropper.getCroppedCanvas({
                   width:400,
                   height:400
               });


            canvas.toBlob((blob) => {
            const newFile = new File([blob], "avatar.png", { type: "image/png" });

            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(newFile);
            avatarInput.files = dataTransfer.files;

            viewAvatar.src = URL.createObjectURL(blob);
        });

        modal.hide();
        cropper.destroy();
        });




            cancelChangesBtn.addEventListener("click", () => {
            avatarInput.value = "";
            previewImage.src = "#";
            viewAvatar.src = "/Picture/default.png";
            if(cropper)
            cropper.destroy();
        });

    </script>
}